
package com.samenea.seapay.client.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ISeapayGatewayService", targetNamespace = "http://transaction.seapay.samenea.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ISeapayGatewayService {


    /**
     * 
     * @param transactionId
     * @param sessionId
     * @return
     *     returns com.samenea.seapay.client.ws.TransactionStatus
     * @throws AuthenticationException_Exception
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionStatus", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.GetTransactionStatus")
    @ResponseWrapper(localName = "getTransactionStatusResponse", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.GetTransactionStatusResponse")
    public TransactionStatus getTransactionStatus(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "transactionId", targetNamespace = "")
        String transactionId)
        throws AuthenticationException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param serviceId
     * @param merchantId
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSession", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.CreateSession")
    @ResponseWrapper(localName = "createSessionResponse", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.CreateSessionResponse")
    public String createSession(
        @WebParam(name = "merchantId", targetNamespace = "")
        String merchantId,
        @WebParam(name = "serviceId", targetNamespace = "")
        String serviceId,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param amount
     * @param callbackUrl
     * @param customerId
     * @param sessionId
     * @param description
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createTransaction", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.CreateTransaction")
    @ResponseWrapper(localName = "createTransactionResponse", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.CreateTransactionResponse")
    public String createTransaction(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "amount", targetNamespace = "")
        int amount,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "callbackUrl", targetNamespace = "")
        String callbackUrl,
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId);

    /**
     * 
     * @param amount
     * @param transactionId
     * @param sessionId
     * @throws CommunicationException_Exception
     * @throws IllegalStateException_Exception
     * @throws AuthenticationException_Exception
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "commitTransaction", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.CommitTransaction")
    @ResponseWrapper(localName = "commitTransactionResponse", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.CommitTransactionResponse")
    public void commitTransaction(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "transactionId", targetNamespace = "")
        String transactionId,
        @WebParam(name = "amount", targetNamespace = "")
        int amount)
        throws AuthenticationException_Exception, CommunicationException_Exception, IllegalStateException_Exception, NotFoundException_Exception
    ;

    /**
     * 
     * @param transactionId
     * @param sessionId
     * @return
     *     returns java.lang.String
     * @throws AuthenticationException_Exception
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBankName", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.GetBankName")
    @ResponseWrapper(localName = "getBankNameResponse", targetNamespace = "http://transaction.seapay.samenea.com/", className = "com.samenea.seapay.client.ws.GetBankNameResponse")
    public String getBankName(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "transactionId", targetNamespace = "")
        String transactionId)
        throws AuthenticationException_Exception, NotFoundException_Exception
    ;

}
